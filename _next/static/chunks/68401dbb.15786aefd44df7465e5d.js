(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[13],{rjl6:function(e,a,t){"use strict";t.r(a),t.d(a,"Layout",(function(){return b})),t.d(a,"meta",(function(){return m})),t.d(a,"tableOfContents",(function(){return d})),t.d(a,"default",(function(){return N}));var n=t("wx14"),c=t("Ff2n"),s=t("q1tI"),p=t.n(s),l=t("7ljp"),r=(t("YFqc"),t("tc9R")),i=t("vRWG"),o=t("I6Nb"),b=(p.a.createElement,i.DocumentationLayout),m={title:"Upgrading from v0.x to v1.0",shortTitle:"Upgrade Guide",description:"A guide for upgrading your existing Tailwind CSS projects to v1.0."},d=[{title:"Upgrade steps for all users",slug:"upgrade-steps-for-all-users",children:[]},{title:"Additional steps for CDN users, or others without a config file",slug:"additional-steps-for-cdn-users-or-others-without-a-config-file",children:[]},{title:"Additional steps for plugin authors",slug:"additional-steps-for-plugin-authors",children:[]}],j={Layout:b,meta:m,tableOfContents:d},O=o.ContentsLayout;function N(e){var a=e.components,t=Object(c.a)(e,["components"]);return Object(l.a)(O,Object(n.a)({},j,t,{components:a,mdxType:"MDXLayout"}),Object(l.a)("p",null,"Tailwind v1.0 is mostly focused on changing things from 0.x that I would have done differently had I known in advance where the feature set would be at today."),Object(l.a)("p",null,"So while there's not a ton of exciting new features, you can at least be excited about the fact that we now have a really stable base to build on, and that you can feel comfortable using Tailwind in production if the 0.x label gave you pause."),Object(l.a)(r.a,{level:2,id:"upgrade-steps-for-all-users",toc:!0},"Upgrade steps for all users"),Object(l.a)("p",null,"These changes affect all users, whether you are using Tailwind with PostCSS and your own custom config file, or just using the default config file or CDN."),Object(l.a)("ol",null,Object(l.a)("li",{parentName:"ol"},Object(l.a)("a",Object(n.a)({parentName:"li"},{href:"#1-update-tailwind"}),"Update Tailwind")),Object(l.a)("li",{parentName:"ol"},Object(l.a)("a",Object(n.a)({parentName:"li"},{href:"#2-update-your-config-file"}),"Update your config file")),Object(l.a)("li",{parentName:"ol"},Object(l.a)("a",Object(n.a)({parentName:"li"},{href:"#3-rename-tailwind-js-to-tailwind-config-js"}),"Rename ",Object(l.a)("inlineCode",{parentName:"a"},"tailwind.js")," to ",Object(l.a)("inlineCode",{parentName:"a"},"tailwind.config.js"))),Object(l.a)("li",{parentName:"ol"},Object(l.a)("a",Object(n.a)({parentName:"li"},{href:"#4-replace-tailwind-preflight-with-tailwind-base"}),"Replace ",Object(l.a)("inlineCode",{parentName:"a"},"@tailwind preflight")," with ",Object(l.a)("inlineCode",{parentName:"a"},"@tailwind base"))),Object(l.a)("li",{parentName:"ol"},Object(l.a)("a",Object(n.a)({parentName:"li"},{href:"#5-replace-config-with-theme"}),"Replace ",Object(l.a)("inlineCode",{parentName:"a"},"config()")," with ",Object(l.a)("inlineCode",{parentName:"a"},"theme()"))),Object(l.a)("li",{parentName:"ol"},Object(l.a)("a",Object(n.a)({parentName:"li"},{href:"#6-explicitly-style-any-headings"}),"Explicitly style any headings")),Object(l.a)("li",{parentName:"ol"},Object(l.a)("a",Object(n.a)({parentName:"li"},{href:"#7-explicitly-style-any-lists-that-should-have-bullets-numbers"}),"Explicitly style any lists that should have bullets/numbers")),Object(l.a)("li",{parentName:"ol"},Object(l.a)("a",Object(n.a)({parentName:"li"},{href:"#8-remove-any-usage-of-list-reset"}),"Remove any usage of ",Object(l.a)("inlineCode",{parentName:"a"},".list-reset"))),Object(l.a)("li",{parentName:"ol"},Object(l.a)("a",Object(n.a)({parentName:"li"},{href:"#9-replace-pin-side-with-top-left-bottom-right-inset-value"}),"Replace ",Object(l.a)("inlineCode",{parentName:"a"},".pin-{side}")," with ",Object(l.a)("inlineCode",{parentName:"a"},".{top|left|bottom|right|inset}-{value}"))),Object(l.a)("li",{parentName:"ol"},Object(l.a)("a",Object(n.a)({parentName:"li"},{href:"#10-replace-roman-with-not-italic"}),"Replace ",Object(l.a)("inlineCode",{parentName:"a"},".roman")," with ",Object(l.a)("inlineCode",{parentName:"a"},".not-italic"))),Object(l.a)("li",{parentName:"ol"},Object(l.a)("a",Object(n.a)({parentName:"li"},{href:"#11-replace-flex-no-grow-shrink-with-flex-grow-shrink-0"}),"Replace ",Object(l.a)("inlineCode",{parentName:"a"},".flex-no-grow/shrink")," with ",Object(l.a)("inlineCode",{parentName:"a"},".flex-grow/shrink-0"))),Object(l.a)("li",{parentName:"ol"},Object(l.a)("a",Object(n.a)({parentName:"li"},{href:"#12-explicitly-add-color-and-underline-styles-to-links"}),"Explicitly add color and underline styles to links")),Object(l.a)("li",{parentName:"ol"},Object(l.a)("a",Object(n.a)({parentName:"li"},{href:"#13-add-inline-to-any-replaced-elements-img-video-etc-that-should-not-be-display-block"}),"Add ",Object(l.a)("inlineCode",{parentName:"a"},"inline")," to any replaced elements (",Object(l.a)("inlineCode",{parentName:"a"},"img"),", ",Object(l.a)("inlineCode",{parentName:"a"},"video"),", etc.) that should not be ",Object(l.a)("inlineCode",{parentName:"a"},"display: block"))),Object(l.a)("li",{parentName:"ol"},Object(l.a)("a",Object(n.a)({parentName:"li"},{href:"#14-adjust-the-line-height-and-padding-on-your-form-elements"}),"Adjust the line-height and padding on your form elements")),Object(l.a)("li",{parentName:"ol"},Object(l.a)("a",Object(n.a)({parentName:"li"},{href:"#15-adjust-the-text-color-on-your-form-elements"}),"Adjust the text color on your form elements")),Object(l.a)("li",{parentName:"ol"},Object(l.a)("a",Object(n.a)({parentName:"li"},{href:"#16-double-check-your-default-font-family"}),"Double check your default font family")),Object(l.a)("li",{parentName:"ol"},Object(l.a)("a",Object(n.a)({parentName:"li"},{href:"#17-double-check-your-default-line-height"}),"Double check your default line-height"))),Object(l.a)(r.a,{id:"1-update-tailwind",level:3,mdxType:"Heading"},"1. Update Tailwind"),Object(l.a)("p",null,"Install the latest version of Tailwind:"),Object(l.a)("pre",{className:"language-bash"},Object(l.a)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"npm")," ",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"install")," tailwindcss@^1.0 --save-dev")),Object(l.a)("p",null,"Or using Yarn:"),Object(l.a)("pre",{className:"language-bash"},Object(l.a)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"yarn")," ",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"add")," -D tailwindcss@^1.0")),Object(l.a)(r.a,{id:"2-update-your-config-file",level:3,mdxType:"Heading"},"2. Update your config file"),Object(l.a)("p",{className:"italic font-normal text-gray-600 mt-4"},"Impact: All users, Effort: Moderate"),Object(l.a)("p",null,"This is really the big change in v1.0 \u2014 you can read all about the new config file format and motivation behind it in ",Object(l.a)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/tailwindlabs/tailwindcss/pull/637"}),"the initial pull request"),"."),Object(l.a)("p",null,"The new general config structure looks like this:"),Object(l.a)("pre",{className:"language-js"},Object(l.a)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"module",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token property-access"}),"exports")," ",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"=")," ",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  prefix",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token string"}),"''"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),","),"\n  important",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token boolean"}),"false"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),","),"\n  separator",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token string"}),"':'"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),","),"\n  theme",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    colors",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{")," ",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token spread operator"}),"...")," ",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),","),"\n    ",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"// ..."),"\n    zIndex",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{")," ",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token spread operator"}),"...")," ",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),","),"\n  ",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),","),"\n  variants",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    appearance",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token string"}),"'responsive'"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),","),"\n    ",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"// ..."),"\n    zIndex",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token string"}),"'responsive'"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),","),"\n  ",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),","),"\n  plugins",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),"\n    ",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"// ..."),"\n  ",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),","),"\n",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"))),Object(l.a)("p",null,"See the new ",Object(l.a)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/tailwindlabs/tailwindcss/blob/master/stubs/defaultConfig.stub.js"}),"default config file")," for a complete example."),Object(l.a)("p",null,"There are a lot of changes here but they are all fairly cosmetic and entirely localized to this one file, so while it may look intimidating it's actually only 10-15 minutes of work."),Object(l.a)("h4",null,"2.1. Move all design-related top-level keys into a new section called ",Object(l.a)("inlineCode",{parentName:"h4"},"theme")),Object(l.a)("p",null,"Every key except ",Object(l.a)("inlineCode",{parentName:"p"},"options"),", ",Object(l.a)("inlineCode",{parentName:"p"},"modules"),", and ",Object(l.a)("inlineCode",{parentName:"p"},"plugins")," should be nested under a new ",Object(l.a)("inlineCode",{parentName:"p"},"theme")," key."),Object(l.a)("p",null,"Your config file should look generally like this at this point:"),Object(l.a)("pre",{className:"language-diff"},Object(l.a)("code",Object(n.a)({parentName:"pre"},{className:"language-diff"}),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," let defaultConfig = require('tailwindcss/defaultConfig')()\n"),"\n",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," let colors = {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   // ...\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," }\n"),"\n",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," module.exports = {\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token deleted-sign deleted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"   colors: colors,\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"   screens: {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"     // ...\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"   },\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"   // ...\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"   zIndex: {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"     // ...\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"   },\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token inserted-sign inserted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"   theme: {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"     colors: colors,\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"     screens: {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"       // ...\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"     },\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"     // ...\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"     zIndex: {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"       // ...\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"     },\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"   },\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   modules: {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     appearance: ['responsive'],\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     // ...\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     zIndex: ['responsive'],\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   },\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   plugins: [\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     require('tailwindcss/plugins/container')({\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"       // ...\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     }),\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   ],\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   options: {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     prefix: '',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     important: false,\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     separator: ':',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   }\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," }"))),Object(l.a)("h4",null,"2.2. Rename ",Object(l.a)("inlineCode",{parentName:"h4"},"modules")," to ",Object(l.a)("inlineCode",{parentName:"h4"},"variants")),Object(l.a)("p",null,'"Modules" was a word we just kinda grabbed because we needed ',Object(l.a)("em",{parentName:"p"},"something"),", and we wanted to use that section of the config to both specify variants and disable modules if necessary."),Object(l.a)("p",null,"Now that all of Tailwind's internal \"modules\" are actually just core plugins, I've decided to deprecate this terminology entirely, and make this section of the config purely about configuring variants for core plugins."),Object(l.a)("p",null,"After making this change, your config file should look like this:"),Object(l.a)("pre",{className:"language-diff"},Object(l.a)("code",Object(n.a)({parentName:"pre"},{className:"language-diff"}),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," let defaultConfig = require('tailwindcss/defaultConfig')()\n"),"\n",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," let colors = {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   // ...\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," }\n"),"\n",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," module.exports = {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   theme: {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     // ...\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   },\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token deleted-sign deleted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"   modules: {\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token inserted-sign inserted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"   variants: {\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     appearance: ['responsive'],\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     backgroundAttachment: ['responsive'],\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     backgroundColors: ['responsive', 'hover', 'focus'],\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     // ...\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     zIndex: ['responsive'],\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   },\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   plugins: [\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     require('tailwindcss/plugins/container')({\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"       // ...\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     }),\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   ],\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   options: {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     prefix: '',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     important: false,\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     separator: ':',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   }\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," }"))),Object(l.a)("h4",null,"2.3. Move your ",Object(l.a)("inlineCode",{parentName:"h4"},"options")," settings to the top-level"),Object(l.a)("p",null,"The advanced options have been moved to the top-level of the config file instead of being nested under the redundant ",Object(l.a)("inlineCode",{parentName:"p"},"options")," key."),Object(l.a)("p",null,"After making this change, your config file should look like this:"),Object(l.a)("pre",{className:"language-diff"},Object(l.a)("code",Object(n.a)({parentName:"pre"},{className:"language-diff"}),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," let defaultConfig = require('tailwindcss/defaultConfig')()\n"),"\n",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," let colors = {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   // ...\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," }\n"),"\n",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," module.exports = {\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token inserted-sign inserted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"   prefix: '',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"   important: false,\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"   separator: ':',\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   theme: {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     // ...\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   },\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   variants: {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     appearance: ['responsive'],\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     backgroundAttachment: ['responsive'],\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     backgroundColors: ['responsive', 'hover', 'focus'],\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     // ...\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     zIndex: ['responsive'],\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   },\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   plugins: [\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     require('tailwindcss/plugins/container')({\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"       // ...\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     }),\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   ],\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token deleted-sign deleted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"   options: {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"     prefix: '',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"     important: false,\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"     separator: ':',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"   }\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," }"))),Object(l.a)("h4",null,"2.4. Move your ",Object(l.a)("inlineCode",{parentName:"h4"},"negativeMargin")," config to ",Object(l.a)("inlineCode",{parentName:"h4"},"margin")),Object(l.a)("p",null,"Negative margins are now handled by the same core plugin that handles positive margins."),Object(l.a)("p",null,"Take any values you had configured under ",Object(l.a)("inlineCode",{parentName:"p"},"negativeMargin")," and move them to ",Object(l.a)("inlineCode",{parentName:"p"},"margin"),", being sure to add a leading dash to the keys and making the actual value negative."),Object(l.a)("pre",{className:"language-diff"},Object(l.a)("code",Object(n.a)({parentName:"pre"},{className:"language-diff"}),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," margin: {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   'auto': 'auto',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   'px': '1px',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   '0': '0',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   '1': '0.25rem',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   '2': '0.5rem',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   '3': '0.75rem',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   '4': '1rem',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   '5': '1.25rem',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   '6': '1.5rem',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   '8': '2rem',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   '10': '2.5rem',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   '12': '3rem',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   '16': '4rem',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   '20': '5rem',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   '24': '6rem',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   '32': '8rem',\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token inserted-sign inserted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"   '-px': '-1px',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"   '-1': '-0.25rem',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"   '-2': '-0.5rem',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"   '-3': '-0.75rem',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"   '-4': '-1rem',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"   '-5': '-1.25rem',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"   '-6': '-1.5rem',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"   '-8': '-2rem',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"   '-10': '-2.5rem',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"   '-12': '-3rem',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"   '-16': '-4rem',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"   '-20': '-5rem',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"   '-24': '-6rem',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"   '-32': '-8rem',\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," },\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token deleted-sign deleted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-")," negativeMargin: {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"   'px': '1px',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"   '0': '0',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"   '1': '0.25rem',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"   '2': '0.5rem',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"   '3': '0.75rem',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"   '4': '1rem',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"   '5': '1.25rem',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"   '6': '1.5rem',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"   '8': '2rem',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"   '10': '2.5rem',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"   '12': '3rem',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"   '16': '4rem',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"   '20': '5rem',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"   '24': '6rem',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"   '32': '8rem',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-")," },"))),Object(l.a)("p",null,"Note that the class names themselves have not changed \u2014 while you might expect that a key like ",Object(l.a)("inlineCode",{parentName:"p"},"-6")," would generate classes like ",Object(l.a)("inlineCode",{parentName:"p"},"mx--6"),", the ",Object(l.a)("inlineCode",{parentName:"p"},"margin")," plugin is intelligent enough to detect those keys and create the class names you're used to like ",Object(l.a)("inlineCode",{parentName:"p"},"-mx-6"),"."),Object(l.a)("h4",null,"2.5. Update the sections under ",Object(l.a)("inlineCode",{parentName:"h4"},"theme")," to their new names"),Object(l.a)("p",null,"As part of an effort to make the naming in the config file more consistent, many of the sections under ",Object(l.a)("inlineCode",{parentName:"p"},"theme")," have been renamed.\nThese names need to change in the ",Object(l.a)("inlineCode",{parentName:"p"},"variants")," section as well, so feel free to do a find and replace across the whole file."),Object(l.a)("p",null,"These are the sections that need to be updated:"),Object(l.a)("table",null,Object(l.a)("thead",{parentName:"table"},Object(l.a)("tr",{parentName:"thead"},Object(l.a)("th",Object(n.a)({parentName:"tr"},{align:null}),"Old"),Object(l.a)("th",Object(n.a)({parentName:"tr"},{align:null}),"New"))),Object(l.a)("tbody",{parentName:"table"},Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"fonts")),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"fontFamily"))),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"textSizes")),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"fontSize"))),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"fontWeights")),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"fontWeight"))),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"leading")),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"lineHeight"))),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"tracking")),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"letterSpacing"))),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"textColors")),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"textColor"))),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"backgroundColors")),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"backgroundColor"))),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"borderWidths")),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"borderWidth"))),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"borderColors")),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"borderColor"))),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"shadows")),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"boxShadow"))),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"svgFill")),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"fill"))),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"svgStroke")),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"stroke"))))),Object(l.a)("h4",null,"2.6. Update the sections under ",Object(l.a)("inlineCode",{parentName:"h4"},"variants")," to their new names"),Object(l.a)("p",null,"As alluded to in the previous step, many of the sections under ",Object(l.a)("inlineCode",{parentName:"p"},"variants")," have been renamed as well."),Object(l.a)("p",null,"These are the sections that need to be renamed ",Object(l.a)("em",{parentName:"p"},"(it is the same as the list above)"),":"),Object(l.a)("table",null,Object(l.a)("thead",{parentName:"table"},Object(l.a)("tr",{parentName:"thead"},Object(l.a)("th",Object(n.a)({parentName:"tr"},{align:null}),"Old"),Object(l.a)("th",Object(n.a)({parentName:"tr"},{align:null}),"New"))),Object(l.a)("tbody",{parentName:"table"},Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"fonts")),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"fontFamily"))),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"textSizes")),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"fontSize"))),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"fontWeights")),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"fontWeight"))),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"leading")),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"lineHeight"))),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"tracking")),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"letterSpacing"))),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"textColors")),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"textColor"))),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"backgroundColors")),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"backgroundColor"))),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"borderWidths")),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"borderWidth"))),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"borderColors")),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"borderColor"))),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"shadows")),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"boxShadow"))),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"svgFill")),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"fill"))),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"svgStroke")),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"stroke"))))),Object(l.a)("p",null,"Several sections under ",Object(l.a)("inlineCode",{parentName:"p"},"variants")," have also been ",Object(l.a)("strong",{parentName:"p"},"split")," into multiple sections, for example ",Object(l.a)("inlineCode",{parentName:"p"},"lists")," has been split into ",Object(l.a)("inlineCode",{parentName:"p"},"listStylePosition")," and ",Object(l.a)("inlineCode",{parentName:"p"},"listStyleType"),":"),Object(l.a)("pre",{className:"language-diff"},Object(l.a)("code",Object(n.a)({parentName:"pre"},{className:"language-diff"}),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," // ...\n"),"\n",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," module.exports = {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   // ...\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   variants: {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     // ...\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token deleted-sign deleted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"     lists: ['responsive'],\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token inserted-sign inserted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"     listStylePosition: ['responsive'],\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"     listStyleType: ['responsive'],\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   }\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," }"))),Object(l.a)("p",null,"Here is a complete list of the sections that been split into multiple sections:"),Object(l.a)("table",null,Object(l.a)("thead",{parentName:"table"},Object(l.a)("tr",{parentName:"thead"},Object(l.a)("th",Object(n.a)({parentName:"tr"},{align:null}),"Old"),Object(l.a)("th",Object(n.a)({parentName:"tr"},{align:null}),"New"))),Object(l.a)("tbody",{parentName:"table"},Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"flexbox")),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"flexDirection"),Object(l.a)("br",null),Object(l.a)("inlineCode",{parentName:"td"},"flexWrap"),Object(l.a)("br",null),Object(l.a)("inlineCode",{parentName:"td"},"alignItems"),Object(l.a)("br",null),Object(l.a)("inlineCode",{parentName:"td"},"alignSelf"),Object(l.a)("br",null),Object(l.a)("inlineCode",{parentName:"td"},"justifyContent"),Object(l.a)("br",null),Object(l.a)("inlineCode",{parentName:"td"},"alignContent"),Object(l.a)("br",null),Object(l.a)("inlineCode",{parentName:"td"},"flex"),Object(l.a)("br",null),Object(l.a)("inlineCode",{parentName:"td"},"flexGrow"),Object(l.a)("br",null),Object(l.a)("inlineCode",{parentName:"td"},"flexShrink"))),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"lists")),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"listStylePosition"),Object(l.a)("br",null),Object(l.a)("inlineCode",{parentName:"td"},"listStyleType"))),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"position")),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"position"),Object(l.a)("br",null),Object(l.a)("inlineCode",{parentName:"td"},"inset"))),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"textStyle")),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"fontStyle"),Object(l.a)("br",null),Object(l.a)("inlineCode",{parentName:"td"},"fontSmoothing"),Object(l.a)("br",null),Object(l.a)("inlineCode",{parentName:"td"},"textDecoration"),Object(l.a)("br",null),Object(l.a)("inlineCode",{parentName:"td"},"textTransform"))),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"whitespace")),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},"whitespace"),Object(l.a)("br",null),Object(l.a)("inlineCode",{parentName:"td"},"wordBreak"))))),Object(l.a)("p",null,"Note that in some cases (",Object(l.a)("inlineCode",{parentName:"p"},"position"),", ",Object(l.a)("inlineCode",{parentName:"p"},"whitespace"),") the original section still exists, while in others (",Object(l.a)("inlineCode",{parentName:"p"},"flexbox"),", ",Object(l.a)("inlineCode",{parentName:"p"},"textStyle"),"), the original section has been completely removed."),Object(l.a)("p",null,"You should reference the new ",Object(l.a)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/tailwindlabs/tailwindcss/blob/master/stubs/defaultConfig.stub.js"}),"default config file")," if you are ever unsure if you are making the right changes."),Object(l.a)("p",null,"The simplest way to make these changes is to just copy the value you were using for the old section (something like ",Object(l.a)("inlineCode",{parentName:"p"},"['responsive']"),") to all of the new sections that replace that section, but if you choose you can also use this as an opportunity to cull generated utilities you don't actually need."),Object(l.a)("p",null,"For example, if you never use the responsive variants of ",Object(l.a)("inlineCode",{parentName:"p"},"antialiased")," or ",Object(l.a)("inlineCode",{parentName:"p"},"subpixel-antialiased"),", you could set ",Object(l.a)("inlineCode",{parentName:"p"},"fontSmoothing")," to ",Object(l.a)("inlineCode",{parentName:"p"},"[]")," while still using ",Object(l.a)("inlineCode",{parentName:"p"},"['responsive']")," for ",Object(l.a)("inlineCode",{parentName:"p"},"fontStyle"),", ",Object(l.a)("inlineCode",{parentName:"p"},"textDecoration"),", and ",Object(l.a)("inlineCode",{parentName:"p"},"textTransform"),"."),Object(l.a)("h4",null,"2.7. Add any disabled ",Object(l.a)("del",{parentName:"h4"},"modules")," core plugins to ",Object(l.a)("inlineCode",{parentName:"h4"},"corePlugins")),Object(l.a)("p",null,"In v0.x, you could disable a ",Object(l.a)("del",{parentName:"p"},"module")," core plugin by setting it to ",Object(l.a)("inlineCode",{parentName:"p"},"false")," in what is now the ",Object(l.a)("inlineCode",{parentName:"p"},"variants")," section."),Object(l.a)("p",null,"In v1.0, to disable a plugin you need to set it to ",Object(l.a)("inlineCode",{parentName:"p"},"false")," in the ",Object(l.a)("inlineCode",{parentName:"p"},"corePlugins")," section instead:"),Object(l.a)("pre",{className:"language-diff"},Object(l.a)("code",Object(n.a)({parentName:"pre"},{className:"language-diff"}),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," let defaultConfig = require('tailwindcss/defaultConfig')()\n"),"\n",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," let colors = {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   // ...\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," }\n"),"\n",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," module.exports = {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   prefix: '',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   important: false,\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   separator: ':',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   theme: {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     // ...\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   },\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   variants: {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     // ...\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token deleted-sign deleted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"     float: false,\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     // ...\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   },\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token inserted-sign inserted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"   corePlugins: {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"     float: false,\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"   },\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   plugins: [\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     require('tailwindcss/plugins/container')({\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"       // ...\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     }),\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   ],\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," }"))),Object(l.a)("p",null,"This change was made to make it possible to disable other core plugins where ",Object(l.a)("inlineCode",{parentName:"p"},"variants")," are irrelevant, like ",Object(l.a)("inlineCode",{parentName:"p"},"preflight")," or ",Object(l.a)("inlineCode",{parentName:"p"},"container")," (more on this later)."),Object(l.a)("h4",null,"2.8. Remove the ",Object(l.a)("inlineCode",{parentName:"h4"},"container")," plugin from ",Object(l.a)("inlineCode",{parentName:"h4"},"plugins")," and move any configuration to ",Object(l.a)("inlineCode",{parentName:"h4"},"theme")),Object(l.a)("p",null,"In v1.0, the ",Object(l.a)("inlineCode",{parentName:"p"},"container")," plugin is a core plugin just like ",Object(l.a)("inlineCode",{parentName:"p"},"padding"),", ",Object(l.a)("inlineCode",{parentName:"p"},"margin"),", etc. and should not be listed in your ",Object(l.a)("inlineCode",{parentName:"p"},"plugins")," section:"),Object(l.a)("pre",{className:"language-diff"},Object(l.a)("code",Object(n.a)({parentName:"pre"},{className:"language-diff"}),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," let defaultConfig = require('tailwindcss/defaultConfig')()\n"),"\n",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," let colors = {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   // ...\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," }\n"),"\n",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," module.exports = {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   prefix: '',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   important: false,\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   separator: ':',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   theme: {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     // ...\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   },\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   variants: {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     // ...\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   },\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   plugins: [\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token deleted-sign deleted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"     require('tailwindcss/plugins/container')({\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"       center: true,\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"       padding: '1rem',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"     }),\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   ],\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," }"))),Object(l.a)("p",null,"If you had already removed the container plugin because you don't want those classes in your project, you should explicitly disable it using the ",Object(l.a)("inlineCode",{parentName:"p"},"corePlugins")," option:"),Object(l.a)("pre",{className:"language-diff"},Object(l.a)("code",Object(n.a)({parentName:"pre"},{className:"language-diff"}),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," let defaultConfig = require('tailwindcss/defaultConfig')()\n"),"\n",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," let colors = {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   // ...\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," }\n"),"\n",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," module.exports = {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   prefix: '',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   important: false,\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   separator: ':',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   theme: {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     // ...\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   },\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   variants: {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     // ...\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   },\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token inserted-sign inserted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"   corePlugins: {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"     container: false\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"   },\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," }"))),Object(l.a)("p",null,"If you are taking advantage of the ",Object(l.a)("inlineCode",{parentName:"p"},"center")," or ",Object(l.a)("inlineCode",{parentName:"p"},"padding")," options exposed by the ",Object(l.a)("inlineCode",{parentName:"p"},"container")," plugin, you should specify those options under ",Object(l.a)("inlineCode",{parentName:"p"},"theme.container")," instead of as direct arguments to the plugin."),Object(l.a)("pre",{className:"language-diff"},Object(l.a)("code",Object(n.a)({parentName:"pre"},{className:"language-diff"}),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," let defaultConfig = require('tailwindcss/defaultConfig')()\n"),"\n",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," let colors = {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   // ...\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," }\n"),"\n",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," module.exports = {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   prefix: '',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   important: false,\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   separator: ':',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   theme: {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     // ...\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token inserted-sign inserted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"     container: {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"       center: true,\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"       padding: '1rem',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"     }\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   },\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   variants: {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     // ...\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   },\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   plugins: [\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token deleted-sign deleted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"     require('tailwindcss/plugins/container')({\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"       center: true,\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"       padding: '1rem',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"     }),\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   ],\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," }"))),Object(l.a)("h4",null,"2.9. Inline your ",Object(l.a)("inlineCode",{parentName:"h4"},"colors")," variable into ",Object(l.a)("inlineCode",{parentName:"h4"},"theme.colors")),Object(l.a)("p",null,"In v1.0, it's possible to specify that parts of your theme ",Object(l.a)("em",{parentName:"p"},"depend")," on other parts of your theme, and because of that it's no longer necessary to hold your ",Object(l.a)("inlineCode",{parentName:"p"},"colors")," in a separate variable."),Object(l.a)("p",null,"Start by inlining your ",Object(l.a)("inlineCode",{parentName:"p"},"colors")," variable directly into ",Object(l.a)("inlineCode",{parentName:"p"},"theme.colors"),":"),Object(l.a)("pre",{className:"language-diff"},Object(l.a)("code",Object(n.a)({parentName:"pre"},{className:"language-diff"}),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," let defaultConfig = require('tailwindcss/defaultConfig')()\n"),"\n",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token deleted-sign deleted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-")," let colors = {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"   'transparent': 'transparent',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"   'black': '#22292f',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"   // ...\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"   'pink-lightest': '#ffebef','\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-")," }\n"),"\n",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," module.exports = {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   prefix: '',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   important: false,\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   separator: ':',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   theme: {\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token deleted-sign deleted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"     colors: colors,\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token inserted-sign inserted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"     colors: {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"       'transparent': 'transparent',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"       'black': '#22292f',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"       // ...\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"       'pink-lightest': '#ffebef','\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"     },\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     // ...\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   },\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   variants: {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     // ...\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   },\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   plugins: [],\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," }"))),Object(l.a)("p",null,"Next, update any sections that were referencing the ",Object(l.a)("inlineCode",{parentName:"p"},"colors")," variable using the new closure syntax:"),Object(l.a)("pre",{className:"language-diff"},Object(l.a)("code",Object(n.a)({parentName:"pre"},{className:"language-diff"}),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," let defaultConfig = require('tailwindcss/defaultConfig')()\n"),"\n",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," module.exports = {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   prefix: '',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   important: false,\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   separator: ':',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   theme: {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     colors: {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"       'transparent': 'transparent',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"       'black': '#22292f',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"       // ...\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"       'pink-lightest': '#ffebef','\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     },\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     // ...\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token deleted-sign deleted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"     backgroundColor: colors,\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token inserted-sign inserted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"     backgroundColor: theme => theme('colors'),\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     // ...\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token deleted-sign deleted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"     textColor: colors,\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token inserted-sign inserted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"     textColor: theme => theme('colors'),\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     // ...\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token deleted-sign deleted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"     borderColor: global.Object.assign({ default: colors['grey-light'] }, colors),\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token inserted-sign inserted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"     borderColor: theme => ({\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"       default: theme('colors.grey-light'),\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"       ...theme('colors'),\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"     }),\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     // ...\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   },\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   variants: {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     // ...\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   },\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   plugins: [],\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," }"))),Object(l.a)("h4",null,"2.10. Don't invoke the default config as a function"),Object(l.a)("p",null,"In v0.x, ",Object(l.a)("inlineCode",{parentName:"p"},"require('tailwindcss/defaultConfig')")," returned a function that returned the default config when invoked."),Object(l.a)("p",null,"In v1.0, it simply returns the object:"),Object(l.a)("pre",{className:"language-diff"},Object(l.a)("code",Object(n.a)({parentName:"pre"},{className:"language-diff"}),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token deleted-sign deleted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-")," let defaultConfig = require('tailwindcss/defaultConfig')()\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token inserted-sign inserted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+")," let defaultConfig = require('tailwindcss/defaultConfig')\n"),"\n",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," module.exports = {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   prefix: '',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   important: false,\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   separator: ':',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   theme: {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     // ...\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   },\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   variants: {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     // ...\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   },\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   plugins: [],\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," }"))),Object(l.a)("h4",null,"2.11. Remove any configuration you haven't customized"),Object(l.a)("p",null,"One of the philosophical changes in v1.0 is that we are encouraging people to use their configuration files solely for specifying ",Object(l.a)("em",{parentName:"p"},"changes")," from the default config, rather than including the entire default config ",Object(l.a)("em",{parentName:"p"},"plus")," their changes."),Object(l.a)("p",null,"Every single key in the config file is optional (in fact the file itself is optional too), so if there are things you've never customized, you're encouraged to remove them entirely."),Object(l.a)("p",null,"For example, if you aren't specifying a custom separator or prefix or enabling the ",Object(l.a)("inlineCode",{parentName:"p"},"important")," option, you can remove them entirely:"),Object(l.a)("pre",{className:"language-diff"},Object(l.a)("code",Object(n.a)({parentName:"pre"},{className:"language-diff"}),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," let defaultConfig = require('tailwindcss/defaultConfig')\n"),"\n",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," module.exports = {\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token deleted-sign deleted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"   prefix: '',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"   important: false,\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"   separator: ':',\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   theme: {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     // ...\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   },\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   variants: {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     // ...\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   },\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   plugins: [],\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," }"))),Object(l.a)("p",null,"Similarly, if you aren't referencing the ",Object(l.a)("inlineCode",{parentName:"p"},"defaultConfig")," variable anywhere, remove that too:"),Object(l.a)("pre",{className:"language-diff"},Object(l.a)("code",Object(n.a)({parentName:"pre"},{className:"language-diff"}),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token deleted-sign deleted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-")," let defaultConfig = require('tailwindcss/defaultConfig')\n"),"\n",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," module.exports = {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   theme: {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     // ...\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   },\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   variants: {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     // ...\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   },\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   plugins: [],\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," }"))),Object(l.a)("p",null,"If you haven't customized the ",Object(l.a)("inlineCode",{parentName:"p"},"opacity")," values, remove them:"),Object(l.a)("pre",{className:"language-diff"},Object(l.a)("code",Object(n.a)({parentName:"pre"},{className:"language-diff"}),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," module.exports = {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   theme: {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     // ...\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token deleted-sign deleted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"     opacity: {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"       '0': '0',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"       '25': '.25',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"       '50': '.5',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"       '75': '.75',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"       '100': '1',\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"     },\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     // ...\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   },\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   variants: {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     // ...\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   },\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   plugins: [],\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," }"))),Object(l.a)("p",null,"We will not change any of this configuration outside of a major version bump, so you are totally safe to depend on inheriting the default values."),Object(l.a)("p",null,"The way your configuration is merged with the defaults is designed to be very intuitive and mostly just work, but for the curious:"),Object(l.a)("ul",null,Object(l.a)("li",{parentName:"ul"},Object(l.a)("inlineCode",{parentName:"li"},"prefix")," is replaced"),Object(l.a)("li",{parentName:"ul"},Object(l.a)("inlineCode",{parentName:"li"},"separator")," is replaced"),Object(l.a)("li",{parentName:"ul"},Object(l.a)("inlineCode",{parentName:"li"},"important")," is replaced"),Object(l.a)("li",{parentName:"ul"},Object(l.a)("inlineCode",{parentName:"li"},"theme")," is merged one level deep, so if you provide an object for ",Object(l.a)("inlineCode",{parentName:"li"},"theme.opacity")," it replaces the default ",Object(l.a)("inlineCode",{parentName:"li"},"theme.opacity")," object"),Object(l.a)("li",{parentName:"ul"},Object(l.a)("inlineCode",{parentName:"li"},"variants")," is merged one level deep, so if you provide an array for ",Object(l.a)("inlineCode",{parentName:"li"},"variants.opacity")," it replaces the default ",Object(l.a)("inlineCode",{parentName:"li"},"variants.opacity")," object"),Object(l.a)("li",{parentName:"ul"},Object(l.a)("inlineCode",{parentName:"li"},"plugins")," is merged, but the default is an empty array so it's really the same as replacing")),Object(l.a)("p",null,"It's worth noting that you are not ",Object(l.a)("em",{parentName:"p"},"required")," to remove any redundant configuration, so if you'd prefer to own the entire system and be able to see it all in one place, you're absolutely welcome to keep everything in your config file."),Object(l.a)("p",null,Object(l.a)("strong",{parentName:"p"},"It's very important to realize that many of the theme values have changed from v0.7.4 to v1.0"),", so just because you never customized a value that shipped by default in v0.x, that doesn't guarantee that you are safe to remove it from your config file."),Object(l.a)("p",null,"A perfect example of this is colors. The default color palette is completely new in v1.0 with a new naming scheme, so even if you were using the default color palette in v0.x, you're actually using a custom color palette in v1.0."),Object(l.a)("p",null,Object(l.a)("strong",{parentName:"p"},"Always double check that anything you want to remove is identical to the ",Object(l.a)("em",{parentName:"strong"},"new")," default config file values before you remove it.")),Object(l.a)(r.a,{id:"3-rename-tailwind-js-to-tailwind-config-js",level:3,mdxType:"Heading"},"3. Rename ",Object(l.a)("code",null,"tailwind.js")," to ",Object(l.a)("code",null,"tailwind.config.js")),Object(l.a)("p",{className:"italic font-normal text-gray-600 mt-4"},"Impact: N/A, Effort: Trivial"),Object(l.a)("p",null,"This is entirely optional but recommended \u2014 if you are using the old default config file name (",Object(l.a)("inlineCode",{parentName:"p"},"tailwind.js"),"), rename it to ",Object(l.a)("inlineCode",{parentName:"p"},"tailwind.config.js"),"."),Object(l.a)("p",null,"If you use that file name and keep the file in the root of your project, Tailwind will pick up your config file by default without having to specify the path in your build scripts/configuration."),Object(l.a)("p",null,"Here's an example of what I mean using Laravel Mix:"),Object(l.a)("pre",{className:"language-diff"},Object(l.a)("code",Object(n.a)({parentName:"pre"},{className:"language-diff"}),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," mix.postCss('resources/css/app.css', 'public/css/app.css', [\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token deleted-sign deleted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"   require('tailwindcss')('./tailwind.js'),\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token inserted-sign inserted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"   require('tailwindcss'),\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," ])"))),Object(l.a)("p",null,"If you keep your config file in a different folder, you'll still need to provide the path:"),Object(l.a)("pre",{className:"language-diff"},Object(l.a)("code",Object(n.a)({parentName:"pre"},{className:"language-diff"}),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," mix.postCss('resources/css/app.css', 'public/css/app.css', [\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token deleted-sign deleted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"   require('tailwindcss')('./resources/tailwind.js'),\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token inserted-sign inserted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"   require('tailwindcss')('./resources/tailwind.config.js'),\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," ])"))),Object(l.a)(r.a,{id:"4-replace-tailwind-preflight-with-tailwind-base",level:3,mdxType:"Heading"},"4. Replace ",Object(l.a)("code",null,"@tailwind preflight")," with ",Object(l.a)("code",null,"@tailwind base")),Object(l.a)("p",{className:"italic font-normal text-gray-600 mt-4"},"Impact: All users, Effort: Trivial"),Object(l.a)("p",null,"One of the new features in v1.0 is the ability for plugins to register base styles. As a result, our ",Object(l.a)("inlineCode",{parentName:"p"},"preflight"),' styles are actually just another core plugin now, and the general "bucket" for base styles has been renamed from ',Object(l.a)("inlineCode",{parentName:"p"},"preflight")," to ",Object(l.a)("inlineCode",{parentName:"p"},"base"),"."),Object(l.a)("p",null,"Replace any instance of ",Object(l.a)("inlineCode",{parentName:"p"},"@tailwind preflight")," in your CSS files with ",Object(l.a)("inlineCode",{parentName:"p"},"@tailwind base"),":"),Object(l.a)("pre",{className:"language-diff"},Object(l.a)("code",Object(n.a)({parentName:"pre"},{className:"language-diff"}),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token deleted-sign deleted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-")," @tailwind preflight;\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token inserted-sign inserted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+")," @tailwind base;\n"),"\n",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," @tailwind components;\n"),"\n",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," @tailwind utilities;"))),Object(l.a)("p",null,"If you are using ",Object(l.a)("inlineCode",{parentName:"p"},"postcss-import")," and relying on our imports instead of the ",Object(l.a)("inlineCode",{parentName:"p"},"@tailwind")," directive, replace ",Object(l.a)("inlineCode",{parentName:"p"},'@import "tailwindcss/preflight"')," with ",Object(l.a)("inlineCode",{parentName:"p"},'@import "tailwindcss/base"'),":"),Object(l.a)("pre",{className:"language-diff"},Object(l.a)("code",Object(n.a)({parentName:"pre"},{className:"language-diff"}),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token deleted-sign deleted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),' @import "tailwindcss/preflight";\n'),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token inserted-sign inserted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),' @import "tailwindcss/base";\n'),"\n",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),' @import "tailwindcss/components";\n'),"\n",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),' @import "tailwindcss/utilities";'))),Object(l.a)(r.a,{id:"5-replace-config-with-theme",level:3,mdxType:"Heading"},"5. Replace ",Object(l.a)("code",null,"config()")," with ",Object(l.a)("code",null,"theme()")),Object(l.a)("p",{className:"italic font-normal text-gray-600 mt-4"},"Impact: Moderate, Effort: Low"),Object(l.a)("p",null,"The ",Object(l.a)("inlineCode",{parentName:"p"},"config()")," helper function that Tailwind makes available to your CSS files has been replaced with a new ",Object(l.a)("inlineCode",{parentName:"p"},"theme()")," function that is automatically scoped to the ",Object(l.a)("inlineCode",{parentName:"p"},"theme")," section of your config file and should work as a drop-in replacement:"),Object(l.a)("pre",{className:"language-diff"},Object(l.a)("code",Object(n.a)({parentName:"pre"},{className:"language-diff"}),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," .btn {\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token deleted-sign deleted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"   padding: config('padding.3');\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token inserted-sign inserted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"   padding: theme('padding.3');\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   // ...\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," }"))),Object(l.a)("p",null,"A simple find and replace across your CSS files that switches ",Object(l.a)("inlineCode",{parentName:"p"},"config(")," to ",Object(l.a)("inlineCode",{parentName:"p"},"theme(")," should do it."),Object(l.a)(r.a,{id:"6-explicitly-style-any-headings",level:3,mdxType:"Heading"},"6. Explicitly style any headings"),Object(l.a)("p",{className:"italic font-normal text-gray-600 mt-4"},"Impact: Moderate, Effort: Moderate"),Object(l.a)("p",null,"If you are using our ",Object(l.a)("inlineCode",{parentName:"p"},"preflight")," styles, all ",Object(l.a)("inlineCode",{parentName:"p"},"h1-h6")," elements are unstyled by default in v1.0."),Object(l.a)("p",null,"That means that out of the box, they all have a font-size of ",Object(l.a)("inlineCode",{parentName:"p"},"1em")," (whatever the parent font size is) and a font-weight of ",Object(l.a)("inlineCode",{parentName:"p"},"inherit"),", so they look exactly like a ",Object(l.a)("inlineCode",{parentName:"p"},"p")," tag."),Object(l.a)("p",null,'We do this because in web application development it\'s very common for some piece of text to be a heading semantically, but actually be styled in a much less "in your face" way because it\'s meant to look more like a subtle label on a section of UI. Because of this, well-designed applications often need to "undo" the user agent styles for headings anyways, and we think it\'s better for styling to feel additive in Tailwind instead of subtractive.'),Object(l.a)("p",null,"By using the user agent styles for headings, we also made it far too easy to accidentally deviate from your own design system. If the browser says that an ",Object(l.a)("inlineCode",{parentName:"p"},"h1")," should be ",Object(l.a)("inlineCode",{parentName:"p"},"2em"),", it could compute to a size that isn't part of your ",Object(l.a)("inlineCode",{parentName:"p"},"fontSize")," scale."),Object(l.a)("p",null,"By unstyling headings by default, we make it a lot easier to avoid this pitfall by ensuring that any size or weight you set is explicit and intentional."),Object(l.a)("p",null,"This change might not affect you at all if you are already specifying a font-weight and font-size on all your headings, but if you aren't, you just need to assign an explicit size and weight wherever it's missing:"),Object(l.a)("pre",{className:"language-diff"},Object(l.a)("code",Object(n.a)({parentName:"pre"},{className:"language-diff"}),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token deleted-sign deleted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-")," <h1>Manage Account<h1>\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token inserted-sign inserted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),' <h1 class="text-xl font-semibold">Manage Account<h1>'))),Object(l.a)("p",null,"The exact changes you need to make will be highly specific to what you want to accomplish with your design, so you'll have to assess each situation independently."),Object(l.a)("p",null,"This is a bit of an annoying change, but if it breaks your site, you could argue that it's actually revealing bugs in your markup."),Object(l.a)(r.a,{id:"7-explicitly-style-any-lists-that-should-have-bullets-numbers",level:3,mdxType:"Heading"},"7. Explicitly style any lists that should have bullets/numbers"),Object(l.a)("p",{className:"italic font-normal text-gray-600 mt-4"},"Impact: Moderate, Effort: Moderate"),Object(l.a)("p",null,"If you are using our ",Object(l.a)("inlineCode",{parentName:"p"},"preflight")," styles, all ",Object(l.a)("inlineCode",{parentName:"p"},"ul")," and ",Object(l.a)("inlineCode",{parentName:"p"},"ol")," elements are unstyled by default in v1.0."),Object(l.a)("p",null,"That means if you have any lists that depend on the default browser styling (bullets/numbers and a bit of left padding), you need to explicitly style those lists using the new ",Object(l.a)("inlineCode",{parentName:"p"},".list-disc/decimal")," utilities and the existing padding utilities:"),Object(l.a)("pre",{className:"language-diff"},Object(l.a)("code",Object(n.a)({parentName:"pre"},{className:"language-diff"}),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token deleted-sign deleted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-")," <ul>\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token inserted-sign inserted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),' <ul class="list-disc pl-4">\n'),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   \x3c!-- ... --\x3e\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," </ul>"))),Object(l.a)("p",null,"If you really don't want to do this manually and would prefer that lists be styled by default, you can override our base styles with your own custom CSS by adding a couple of rules like this:"),Object(l.a)("pre",{className:"language-css"},Object(l.a)("code",Object(n.a)({parentName:"pre"},{className:"language-css"}),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token atrule"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token rule"}),"@tailwind")," base",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),";")),"\n\n",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token selector"}),"ul")," ",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token property"}),"list-style-type"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),":")," disc",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token property"}),"padding-left"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),":")," ",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"theme"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token string"}),"'padding.4'"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token selector"}),"ol")," ",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token property"}),"list-style-type"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),":")," decimal",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token property"}),"padding-left"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),":")," ",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"theme"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token string"}),"'padding.4'"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token atrule"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token rule"}),"@tailwind")," components",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),";")),"\n\n",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token atrule"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token rule"}),"@tailwind")," utilities",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),";")))),Object(l.a)(r.a,{id:"8-remove-any-usage-of-list-reset",level:3,mdxType:"Heading"},"8. Remove any usage of ",Object(l.a)("code",null,".list-reset")),Object(l.a)("p",{className:"italic font-normal text-gray-600 mt-4"},"Impact: Moderate, Effort: Low"),Object(l.a)("p",null,"Since lists are now unstyled by default, ",Object(l.a)("inlineCode",{parentName:"p"},".list-reset")," has been removed. You technically don't need to change anything, but you're encouraged to remove any usage of it as it's now just dead code:"),Object(l.a)("pre",{className:"language-diff"},Object(l.a)("code",Object(n.a)({parentName:"pre"},{className:"language-diff"}),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token deleted-sign deleted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),' <ul class="list-reset">\x3c!-- ... --\x3e</ul>\n'),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token inserted-sign inserted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+")," <ul>\x3c!-- ... --\x3e</ul>"))),Object(l.a)("p",null,"If you chose override our base styles and give lists a default style, you can use the new ",Object(l.a)("inlineCode",{parentName:"p"},".list-none")," utility as well as ",Object(l.a)("inlineCode",{parentName:"p"},".p-0")," as a replacement for ",Object(l.a)("inlineCode",{parentName:"p"},".list-reset")," to remove that base styling as needed:"),Object(l.a)("pre",{className:"language-diff"},Object(l.a)("code",Object(n.a)({parentName:"pre"},{className:"language-diff"}),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token deleted-sign deleted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),' <ul class="list-reset">\x3c!-- ... --\x3e</ul>\n'),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token inserted-sign inserted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),' <ul class="list-none p-0">\x3c!-- ... --\x3e</ul>'))),Object(l.a)("p",null,"Again, ",Object(l.a)("strong",{parentName:"p"},"if you are using our ",Object(l.a)("inlineCode",{parentName:"strong"},"preflight")," styles unmodified (you probably are), you can simply remove ",Object(l.a)("inlineCode",{parentName:"strong"},"list-reset")," from your markup and nothing will change"),"."),Object(l.a)("p",null,"This change only really affects you if you are ",Object(l.a)("em",{parentName:"p"},"not")," using our ",Object(l.a)("inlineCode",{parentName:"p"},"preflight")," styles, or overriding our global list reset."),Object(l.a)(r.a,{id:"9-replace-pin-side-with-top-left-bottom-right-inset-value",level:3,mdxType:"Heading"},"9. Replace ",Object(l.a)("code",null,".pin-{side}")," with ",Object(l.a)("code",null,".{top|left|bottom|right|inset}-{value}")),Object(l.a)("p",{className:"italic font-normal text-gray-600 mt-4"},"Impact: High, Effort: Moderate"),Object(l.a)("p",null,"Utilities like ",Object(l.a)("inlineCode",{parentName:"p"},".pin"),", ",Object(l.a)("inlineCode",{parentName:"p"},".pin-x"),", and ",Object(l.a)("inlineCode",{parentName:"p"},".pin-t")," have been removed in favor of less cleverly named classes like ",Object(l.a)("inlineCode",{parentName:"p"},".top-0"),", ",Object(l.a)("inlineCode",{parentName:"p"},".right-0"),", etc."),Object(l.a)("p",null,"See the ",Object(l.a)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/tailwindlabs/tailwindcss/pull/764"}),"pull request")," for more details on the motivation behind this change."),Object(l.a)("p",null,"Here is a complete list of the changes:"),Object(l.a)("table",null,Object(l.a)("thead",{parentName:"table"},Object(l.a)("tr",{parentName:"thead"},Object(l.a)("th",Object(n.a)({parentName:"tr"},{align:null}),"Old"),Object(l.a)("th",Object(n.a)({parentName:"tr"},{align:null}),"New"))),Object(l.a)("tbody",{parentName:"table"},Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},".pin-none")),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},".inset-auto"))),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},".pin")),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},".inset-0"))),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},".pin-y")),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},".inset-y-0"))),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},".pin-x")),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},".inset-x-0"))),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},".pin-t")),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},".top-0"))),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},".pin-r")),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},".right-0"))),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},".pin-b")),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},".bottom-0"))),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},".pin-l")),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},".left-0"))))),Object(l.a)("p",null,"Six new classes have been added as well:"),Object(l.a)("table",null,Object(l.a)("thead",{parentName:"table"},Object(l.a)("tr",{parentName:"thead"},Object(l.a)("th",Object(n.a)({parentName:"tr"},{align:null}),"Class"))),Object(l.a)("tbody",{parentName:"table"},Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},".inset-y-auto"))),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},".inset-x-auto"))),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},".top-auto"))),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},".right-auto"))),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},".bottom-auto"))),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.a)("inlineCode",{parentName:"td"},".left-auto"))))),Object(l.a)("p",null,"These are all now customizable in ",Object(l.a)("inlineCode",{parentName:"p"},"theme.inset")," too, whereas the ",Object(l.a)("inlineCode",{parentName:"p"},"pin-{side}")," utilities were not."),Object(l.a)("p",null,"This is an annoying change, sorry."),Object(l.a)(r.a,{id:"10-replace-roman-with-not-italic",level:3,mdxType:"Heading"},"10. Replace ",Object(l.a)("code",null,".roman")," with ",Object(l.a)("code",null,".not-italic")),Object(l.a)("p",{className:"italic font-normal text-gray-600 mt-4"},"Impact: Low, Effort: Low"),Object(l.a)("p",null,"Previously we used the name ",Object(l.a)("inlineCode",{parentName:"p"},".roman")," for ",Object(l.a)("inlineCode",{parentName:"p"},"font-style: normal")," because of a bug in ",Object(l.a)("inlineCode",{parentName:"p"},"postcss-selector-not")," that prevented us from using ",Object(l.a)("inlineCode",{parentName:"p"},".not-italic"),". That bug has been fixed, so this name has been changed."),Object(l.a)("pre",{className:"language-diff"},Object(l.a)("code",Object(n.a)({parentName:"pre"},{className:"language-diff"}),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token deleted-sign deleted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),' <div class="roman">\n'),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token inserted-sign inserted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),' <div class="not-italic">\n'),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   \x3c!-- ... --\x3e\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," </div>"))),Object(l.a)("p",null,"I would be surprised if more than 5 people are even affected by this, I've never used this class once myself."),Object(l.a)(r.a,{id:"11-replace-flex-no-grow-shrink-with-flex-grow-shrink-0",level:3,mdxType:"Heading"},"11. Replace ",Object(l.a)("code",null,".flex-no-grow/shrink")," with ",Object(l.a)("code",null,".flex-grow/shrink-0")),Object(l.a)("p",{className:"italic font-normal text-gray-600 mt-4"},"Impact: High, Effort: Low"),Object(l.a)("p",null,"In order to make these utilities more easily customizable, their names have changed to match our existing conventions."),Object(l.a)("pre",{className:"language-diff"},Object(l.a)("code",Object(n.a)({parentName:"pre"},{className:"language-diff"}),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token deleted-sign deleted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),' <div class="flex-no-grow">\n'),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token inserted-sign inserted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),' <div class="flex-grow-0">\n'),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   \x3c!-- ... --\x3e\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," </div>\n"),"\n",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token deleted-sign deleted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),' <div class="flex-no-shrink">\n'),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token inserted-sign inserted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),' <div class="flex-shrink-0">\n'),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   \x3c!-- ... --\x3e\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," </div>"))),Object(l.a)("p",null,"These utilities are also now customizable in the ",Object(l.a)("inlineCode",{parentName:"p"},"theme.flexGrow")," and ",Object(l.a)("inlineCode",{parentName:"p"},"theme.flexShrink")," sections of your config file."),Object(l.a)(r.a,{id:"12-explicitly-add-color-and-underline-styles-to-links",level:3,mdxType:"Heading"},"12. Explicitly add color and underline styles to links"),Object(l.a)("p",{className:"italic font-normal text-gray-600 mt-4"},"Impact: High, Effort: Moderate"),Object(l.a)("p",null,"In v1.0, ",Object(l.a)("inlineCode",{parentName:"p"},"a")," tags automatically inherit the parent ",Object(l.a)("inlineCode",{parentName:"p"},"color")," and ",Object(l.a)("inlineCode",{parentName:"p"},"text-decoration")," styles which means that by default links are no longer blue and do not have an underline."),Object(l.a)("p",null,"You are likely already adding a text color class like ",Object(l.a)("inlineCode",{parentName:"p"},"text-green-dark")," or similar to your links because you probably didn't want the default browser-blue color, but if not you'll need to add a color explicitly:"),Object(l.a)("pre",{className:"language-diff"},Object(l.a)("code",Object(n.a)({parentName:"pre"},{className:"language-diff"}),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token deleted-sign deleted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),' <a href="#">\n'),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token inserted-sign inserted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),' <a href="#" class="text-blue">\n'),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   \x3c!-- ... --\x3e\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," </a"))),Object(l.a)("p",null,"Similarly, if you have any links that need underlines, you'll have to add them manually:"),Object(l.a)("pre",{className:"language-diff"},Object(l.a)("code",Object(n.a)({parentName:"pre"},{className:"language-diff"}),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token deleted-sign deleted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),' <a href="#">\n'),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token inserted-sign inserted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),' <a href="#" class="underline">\n'),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   \x3c!-- ... --\x3e\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," </a"))),Object(l.a)("p",null,"On the flip side, if you are using ",Object(l.a)("inlineCode",{parentName:"p"},"no-underline")," in a million places across your project just to unstyle links, you can now safely remove that class:"),Object(l.a)("pre",{className:"language-diff"},Object(l.a)("code",Object(n.a)({parentName:"pre"},{className:"language-diff"}),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token deleted-sign deleted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),' <a href="#" class="no-underline">\n'),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token inserted-sign inserted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),' <a href="#">\n'),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   \x3c!-- ... --\x3e\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," </a"))),Object(l.a)("p",null,"If you really don't like these new defaults, you can add your own base link styles after ",Object(l.a)("inlineCode",{parentName:"p"},"@tailwind base"),":"),Object(l.a)("pre",{className:"language-css"},Object(l.a)("code",Object(n.a)({parentName:"pre"},{className:"language-css"}),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token atrule"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token rule"}),"@tailwind")," base",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),";")),"\n\n",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token selector"}),"a")," ",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token property"}),"color"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),":")," ",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"theme"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token string"}),"'colors.blue'"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token property"}),"text-decoration"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),":")," underline",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token atrule"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token rule"}),"@tailwind")," components",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),";")),"\n",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token atrule"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token rule"}),"@tailwind")," utilities",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),";")))),Object(l.a)(r.a,{id:"13-add-inline-to-any-replaced-elements-img-video-etc-that-should-not-be-display-block",level:3,mdxType:"Heading"},"13. Add ",Object(l.a)("code",null,"inline")," to any replaced elements (",Object(l.a)("code",null,"img"),", ",Object(l.a)("code",null,"video"),", etc.) that should not be ",Object(l.a)("code",null,"display: block")),Object(l.a)("p",{className:"italic font-normal text-gray-600 mt-4"},"Impact: Moderate, Effort: Moderate"),Object(l.a)("p",null,"In v1.0, all replaced elements (like ",Object(l.a)("inlineCode",{parentName:"p"},"img"),", ",Object(l.a)("inlineCode",{parentName:"p"},"svg"),", ",Object(l.a)("inlineCode",{parentName:"p"},"video"),", ",Object(l.a)("inlineCode",{parentName:"p"},"canvas"),", ",Object(l.a)("inlineCode",{parentName:"p"},"iframe"),", etc.) are set to ",Object(l.a)("inlineCode",{parentName:"p"},"display: block")," by default. This is counter to the browser default which is ",Object(l.a)("inlineCode",{parentName:"p"},"inline"),"."),Object(l.a)("p",null,"If you have any instances in your project where you actually want these elements to be ",Object(l.a)("inlineCode",{parentName:"p"},"inline"),", you'll need to add that class:"),Object(l.a)("pre",{className:"language-diff"},Object(l.a)("code",Object(n.a)({parentName:"pre"},{className:"language-diff"}),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," <span>\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token deleted-sign deleted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),'   <img src="..." class="h-4 w-4">\n'),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token inserted-sign inserted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),'   <img src="..." class="h-4 w-4 inline">\n'),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   Manage\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," </span>"))),Object(l.a)("p",null,"I don't think this will actually affect many people or projects, as you almost always want these elements to be ",Object(l.a)("inlineCode",{parentName:"p"},"block")," or you have them nested inside a flex container where it doesn't matter."),Object(l.a)(r.a,{id:"14-adjust-the-line-height-and-padding-on-your-form-elements",level:3,mdxType:"Heading"},"14. Adjust the line-height and padding on your form elements"),Object(l.a)("p",{className:"italic font-normal text-gray-600 mt-4"},"Impact: High, Effort: Moderate"),Object(l.a)("p",null,Object(l.a)("strong",{parentName:"p"},"If you are already setting an explicit line-height on form elements, this change will not affect you.")),Object(l.a)("p",null,"In v0.x, we used a line-height of 1.15 for form elements by default, sort of incidentally by depending on normalize.css."),Object(l.a)("p",null,"This made it very easy to forget to add an explicit line-height like ",Object(l.a)("inlineCode",{parentName:"p"},"leading-tight")," or ",Object(l.a)("inlineCode",{parentName:"p"},"leading-normal")," to form elements, introducing a new line-height (1.15) into your project that doesn't match any of the ",Object(l.a)("inlineCode",{parentName:"p"},"leading-{size}")," utilities."),Object(l.a)("p",null,"In v1.0, all form elements use a value of ",Object(l.a)("inlineCode",{parentName:"p"},"inherit")," for their line-height, so the line-height will match the parent element by default."),Object(l.a)("p",null,"That means if you had some markup like this:"),Object(l.a)("pre",{className:"language-html"},Object(l.a)("code",Object(n.a)({parentName:"pre"},{className:"language-html"}),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token tag"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token tag"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),"<"),"div")," ",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token attr-name"}),"class"),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token attr-value"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),"="),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),'"'),"leading-normal ...",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),'"')),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),">")),"\n  ",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"\x3c!-- ... --\x3e"),"\n  ",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token tag"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token tag"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),"<"),"input")," ",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token attr-name"}),"type"),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token attr-value"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),"="),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),'"'),"text",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),'"'))," ",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token attr-name"}),"class"),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token attr-value"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),"="),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),'"'),"px-4 py-3",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),'"')),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),">")),"\n",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token tag"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token tag"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),"</"),"div"),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),">")))),Object(l.a)("p",null,"...your ",Object(l.a)("inlineCode",{parentName:"p"},"input")," element will be slightly taller in v1.0 because the line-height has increased from 1.15 to 1.5."),Object(l.a)("p",null,"You can fix this by adjusting any vertical padding to account for the new line-height, and optionally adding an explicit ",Object(l.a)("inlineCode",{parentName:"p"},"leading-{size}")," class if you don't want to match the line-height of the parent:"),Object(l.a)("pre",{className:"language-diff"},Object(l.a)("code",Object(n.a)({parentName:"pre"},{className:"language-diff"}),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),' <div class="leading-normal ...">\n',Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   \x3c!-- ... --\x3e\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token deleted-sign deleted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),'   <input type="text" class="px-4 py-3">\n'),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token inserted-sign inserted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),'   <input type="text" class="px-4 py-2 leading-tight">\n'),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," </div>"))),Object(l.a)("p",null,"You might not get the exact same height you had before, but that's likely because the old height was some weird fractional number like 42.4px (line-height of 1.15 * font-size of 16px + 24px of padding). With the new system you are much more likely to land on reasonable whole numbers, like 40px of 44px, depending on your chosen line-height and padding values."),Object(l.a)("p",null,"If you really want to use 1.15 as your default line-height for form elements (I would recommend against it), you can add a rule like this to your own base styles:"),Object(l.a)("pre",{className:"language-css"},Object(l.a)("code",Object(n.a)({parentName:"pre"},{className:"language-css"}),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token atrule"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token rule"}),"@tailwind")," base",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),";")),"\n\n",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token selector"}),"button,\ninput,\noptgroup,\nselect,\ntextarea")," ",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token property"}),"line-height"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),":")," ",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"1.15"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token atrule"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token rule"}),"@tailwind")," components",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),";")),"\n",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token atrule"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token rule"}),"@tailwind")," utilities",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),";")))),Object(l.a)(r.a,{id:"15-adjust-the-text-color-on-your-form-elements",level:3,mdxType:"Heading"},"15. Adjust the text color on your form elements"),Object(l.a)("p",{className:"italic font-normal text-gray-600 mt-4"},"Impact: Low, Effort: Moderate"),Object(l.a)("p",null,Object(l.a)("strong",{parentName:"p"},"If you are already setting an explicit text color on form elements, this change will not affect you.")),Object(l.a)("p",null,"In v0.x, form elements used black text by default, even though true black was not part of the default color palette."),Object(l.a)("p",null,"In v1.0, form elements inherit their text color from the parent, which means if you have any markup like this:"),Object(l.a)("pre",{className:"language-html"},Object(l.a)("code",Object(n.a)({parentName:"pre"},{className:"language-html"}),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token tag"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token tag"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),"<"),"div")," ",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token attr-name"}),"class"),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token attr-value"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),"="),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),'"'),"text-red",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),'"')),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),">")),"\n  ",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token tag"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token tag"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),"<"),"input")," ",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token attr-name"}),"type"),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token attr-value"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),"="),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),'"'),"text",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),'"')),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),">")),"\n",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token tag"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token tag"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),"</"),"div"),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),">")))),Object(l.a)("p",null,"...your ",Object(l.a)("inlineCode",{parentName:"p"},"input")," would have red text instead of black text."),Object(l.a)("p",null,"You can fix this by setting a text color on form elements explicitly:"),Object(l.a)("pre",{className:"language-diff"},Object(l.a)("code",Object(n.a)({parentName:"pre"},{className:"language-diff"}),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),' <div class="text-red">\n'),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token deleted-sign deleted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),'   <input type="text">\n'),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token inserted-sign inserted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),'   <input type="text" class="text-grey-darkest">\n'),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," </div>"))),Object(l.a)(r.a,{id:"16-double-check-your-default-font-family",level:3,mdxType:"Heading"},"16. Double check your default font family"),Object(l.a)("p",{className:"italic font-normal text-gray-600 mt-4"},"Impact: Low, Effort: Trivial"),Object(l.a)("p",null,Object(l.a)("strong",{parentName:"p"},"If you are already setting a default font family on your project (either with a class on ",Object(l.a)("inlineCode",{parentName:"strong"},"html"),"/",Object(l.a)("inlineCode",{parentName:"strong"},"body")," or using custom CSS), this change will not affect you.")),Object(l.a)("p",null,"In v1.0, the default font family has changed from ",Object(l.a)("inlineCode",{parentName:"p"},"sans-serif")," to our system font stack."),Object(l.a)("p",null,"It's very unlikely that you weren't already overriding this with your own font, but if not you'll notice your site looks a bit different, and honestly probably better."),Object(l.a)("p",null,"You don't really have to change anything unless for some unexplainable reason you want to use ",Object(l.a)("inlineCode",{parentName:"p"},"sans-serif")," as your default font family, in which case you can add a rule to your base styles:"),Object(l.a)("pre",{className:"language-css"},Object(l.a)("code",Object(n.a)({parentName:"pre"},{className:"language-css"}),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token atrule"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token rule"}),"@tailwind")," base",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),";")),"\n\n",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token selector"}),"html")," ",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token property"}),"font-family"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),":")," sans-serif",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token atrule"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token rule"}),"@tailwind")," components",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),";")),"\n",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token atrule"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token rule"}),"@tailwind")," utilities",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),";")))),Object(l.a)(r.a,{id:"17-double-check-your-default-line-height",level:3,mdxType:"Heading"},"17. Double check your default line-height"),Object(l.a)("p",{className:"italic font-normal text-gray-600 mt-4"},"Impact: Moderate, Effort: Moderate"),Object(l.a)("p",null,Object(l.a)("strong",{parentName:"p"},"If you are already setting a default line-height on your project (either with a class on ",Object(l.a)("inlineCode",{parentName:"strong"},"html"),"/",Object(l.a)("inlineCode",{parentName:"strong"},"body")," or using custom CSS), this change will not affect you.")),Object(l.a)("p",null,"In v0.x, the default line-height was 1.15 (inherited from normalize.css). Since that value isn't part of Tailwind's default theme, we've opted to change it to 1.5 for v1.0 so the default line-height matches a value in the line-height scale."),Object(l.a)("p",null,"This means that if you are not setting a line-height either using a ",Object(l.a)("inlineCode",{parentName:"p"},"leading-{size}")," class on the ",Object(l.a)("inlineCode",{parentName:"p"},"html")," or ",Object(l.a)("inlineCode",{parentName:"p"},"body")," tags or by adding some base styles to your CSS, most things on your site are going to appear a little bit taller."),Object(l.a)("p",null,"The easiest solution is to reset the line-height to 1.15 by default:"),Object(l.a)("pre",{className:"language-css"},Object(l.a)("code",Object(n.a)({parentName:"pre"},{className:"language-css"}),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token atrule"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token rule"}),"@tailwind")," base",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),";")),"\n\n",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token selector"}),"html")," ",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token property"}),"line-height"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),":")," ",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"1.15"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token atrule"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token rule"}),"@tailwind")," components",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),";")),"\n",Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token atrule"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token rule"}),"@tailwind")," utilities",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),";")))),Object(l.a)("p",null,"However, a better long-term solution would be to pick a default line-height that matches a value in your line-height scale, and audit your site to find situations where it makes the design look worse and tweak those one at a time."),Object(l.a)("hr",null),Object(l.a)(r.a,{level:2,id:"additional-steps-for-cdn-users-or-others-without-a-config-file",toc:!0},"Additional steps for CDN users, or others without a config file"),Object(l.a)("p",null,"These steps only affect users that are depending on the 0.x configuration file values. This includes CDN users, or anyone that is omitting sections from their config file, referencing our config file, or not using a config file at all."),Object(l.a)("ol",null,Object(l.a)("li",{parentName:"ol"},Object(l.a)("a",Object(n.a)({parentName:"li"},{href:"#1-update-any-usage-of-text-bg-border-color-classes"}),"Update any usage of ",Object(l.a)("inlineCode",{parentName:"a"},"text/bg/border-{color}")," classes")),Object(l.a)("li",{parentName:"ol"},Object(l.a)("a",Object(n.a)({parentName:"li"},{href:"#2-replace-tracking-tight-wide-with-tracking-tighter-wider"}),"Replace ",Object(l.a)("inlineCode",{parentName:"a"},"tracking-tight/wide")," with ",Object(l.a)("inlineCode",{parentName:"a"},"tracking-tighter/wider"))),Object(l.a)("li",{parentName:"ol"},Object(l.a)("a",Object(n.a)({parentName:"li"},{href:"#3-check-your-design-against-the-updated-default-breakpoints"}),"Check your design against the updated default breakpoints")),Object(l.a)("li",{parentName:"ol"},Object(l.a)("a",Object(n.a)({parentName:"li"},{href:"#4-double-check-any-usage-of-the-default-shadow-size-utilities"}),"Double check any usage of the default ",Object(l.a)("inlineCode",{parentName:"a"},"shadow-{size}")," utilities")),Object(l.a)("li",{parentName:"ol"},Object(l.a)("a",Object(n.a)({parentName:"li"},{href:"#5-update-any-usage-of-the-default-max-w-size-utilities"}),"Update any usage of the default ",Object(l.a)("inlineCode",{parentName:"a"},"max-w-{size}")," utilities"))),Object(l.a)(r.a,{id:"1-update-any-usage-of-text-bg-border-color-classes",level:3,mdxType:"Heading"},"1. Update any usage of ",Object(l.a)("code",null,"text/bg/border-{color}")," classes"),Object(l.a)("p",{className:"italic font-normal text-gray-600 mt-4"},"Impact: Low, Effort: High"),Object(l.a)("p",null,Object(l.a)("strong",{parentName:"p"},"This change only affects you if you don't have a color palette defined in your config file or you are using Tailwind through a CDN.")),Object(l.a)("p",null,"Tailwind v1.0 comes with an entirely new color palette that provides 9 shades for each color instead of 7 (",Object(l.a)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/tailwindlabs/tailwindcss/pull/737"}),"#","737"),")."),Object(l.a)("p",null,"The naming scheme has changed from using words like ",Object(l.a)("inlineCode",{parentName:"p"},"darkest")," and ",Object(l.a)("inlineCode",{parentName:"p"},"lighter")," to a numeric scaled inspired by Material Design that starts at ",Object(l.a)("inlineCode",{parentName:"p"},"100")," for the lightest shade and ends at ",Object(l.a)("inlineCode",{parentName:"p"},"900")," for the darkest shade."),Object(l.a)("p",null,"There is no way to map the old colors to the new colors 1:1 because the new palette includes more shades, so if you are using the v0.x default color palette and would like to upgrade to the new color palette, you are in for some fun (you're not)."),Object(l.a)("p",null,"I would recommend starting with the following substitutions and then adjusting colors up or down a shade on a case-by-case basis as you feel is needed."),Object(l.a)("p",null,"For grays (note that ",Object(l.a)("inlineCode",{parentName:"p"},"grey")," has changed to ",Object(l.a)("inlineCode",{parentName:"p"},"gray"),"):"),Object(l.a)("table",null,Object(l.a)("thead",{parentName:"table"},Object(l.a)("tr",{parentName:"thead"},Object(l.a)("th",Object(n.a)({parentName:"tr"},{align:null}),"Old"),Object(l.a)("th",Object(n.a)({parentName:"tr"},{align:null}),"New"))),Object(l.a)("tbody",{parentName:"table"},Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),"black"),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),"gray-900")),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),"grey-darkest"),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),"gray-800")),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),"grey-darker"),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),"gray-700")),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),"grey-dark"),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),"gray-600")),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),"grey"),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),"gray-500")),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),"grey-light"),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),"gray-400")),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),"grey-lighter"),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),"gray-200")),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),"grey-lightest"),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),"gray-100")),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),"white"),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),"white")))),Object(l.a)("p",null,"For other colors:"),Object(l.a)("table",null,Object(l.a)("thead",{parentName:"table"},Object(l.a)("tr",{parentName:"thead"},Object(l.a)("th",Object(n.a)({parentName:"tr"},{align:null}),"Old"),Object(l.a)("th",Object(n.a)({parentName:"tr"},{align:null}),"New"))),Object(l.a)("tbody",{parentName:"table"},Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),"{color}-darkest"),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),"{color}-900")),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),"{color}-darker"),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),"{color}-800")),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),"{color}-dark"),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),"{color}-600")),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),"{color}"),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),"{color}-500")),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),"{color}-light"),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),"{color}-400")),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),"{color}-lighter"),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),"{color}-200")),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),"{color}-lightest"),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),"{color}-100")))),Object(l.a)("p",null,"Again, this change only affects you if you do not have your own color palette specified in your config file, or you are using the default Tailwind build through a CDN. If you are using the v0.x color palette in your project, you can absolutely keep using it. You do not need to make these changes unless you have a hard dependency on our default color palette in some way."),Object(l.a)(r.a,{id:"2-replace-tracking-tight-wide-with-tracking-tighter-wider",level:3,mdxType:"Heading"},"2. Replace ",Object(l.a)("code",null,"tracking-tight/wide")," with ",Object(l.a)("code",null,"tracking-tighter/wider")),Object(l.a)("p",{className:"italic font-normal text-gray-600 mt-4"},"Impact: Low, Effort: Low"),Object(l.a)("p",null,Object(l.a)("strong",{parentName:"p"},"This change only affects you if you don't have a tracking/letter-spacing scale defined in your config file or you are using Tailwind through a CDN.")),Object(l.a)("p",null,"In v1.0, the default letter-spacing scale has changed:"),Object(l.a)("pre",{className:"language-diff"},Object(l.a)("code",Object(n.a)({parentName:"pre"},{className:"language-diff"}),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"letterSpacing: {\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token inserted-sign inserted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"  tighter: -.05em,\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token deleted-sign deleted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"  tight: -.05em,\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token inserted-sign inserted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"  tight: -.025em,\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"  normal: 0,\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token deleted-sign deleted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"  wide: .05em,\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token inserted-sign inserted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"  wide: .025em,\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"  wider: .05em,\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"  widest: .1em,\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"}"))),Object(l.a)("p",null,"That means that if you want your project to look the same, you'll want to replace any existing occurrences of ",Object(l.a)("inlineCode",{parentName:"p"},"tracking-tight")," with ",Object(l.a)("inlineCode",{parentName:"p"},"tracking-tighter"),", and ",Object(l.a)("inlineCode",{parentName:"p"},"tracking-wide")," with ",Object(l.a)("inlineCode",{parentName:"p"},"tracking-wider"),"."),Object(l.a)("p",null,"Again, this only applies if you do not have a letter-spacing scale defined in your config file or if you are using the default Tailwind build through a CDN."),Object(l.a)("p",null,"If you started with a complete config file, your old scale will continue to work the same way in v1.0 and you don't need to make any changes."),Object(l.a)(r.a,{id:"3-check-your-design-against-the-updated-default-breakpoints",level:3,mdxType:"Heading"},"3. Check your design against the updated default breakpoints"),Object(l.a)("p",{className:"italic font-normal text-gray-600 mt-4"},"Impact: Low, Effort: Low"),Object(l.a)("p",null,Object(l.a)("strong",{parentName:"p"},"This change only affects you if you don't have ",Object(l.a)("inlineCode",{parentName:"strong"},"screens")," defined in your config file or you are using Tailwind through a CDN.")),Object(l.a)("p",null,"The default breakpoints have changed a bit in v1.0:"),Object(l.a)("table",null,Object(l.a)("thead",{parentName:"table"},Object(l.a)("tr",{parentName:"thead"},Object(l.a)("th",Object(n.a)({parentName:"tr"},{align:null}),"Screen"),Object(l.a)("th",Object(n.a)({parentName:"tr"},{align:null}),"Old"),Object(l.a)("th",Object(n.a)({parentName:"tr"},{align:null}),"New"))),Object(l.a)("tbody",{parentName:"table"},Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),"sm"),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),"576px"),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),"640px")),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),"md"),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),"768px"),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),"768px ",Object(l.a)("em",{parentName:"td"},"(unchanged)"))),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),"lg"),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),"992px"),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),"1024px")),Object(l.a)("tr",{parentName:"tbody"},Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),"xl"),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),"1200px"),Object(l.a)("td",Object(n.a)({parentName:"tr"},{align:null}),"1280px")))),Object(l.a)("p",null,"If your config file doesn't have any screens defined or you are using the default Tailwind build through a CDN, you'll want to audit your design and make sure that nothing breaks because of these changes. No breakpoints got smaller so you are very unlikely to run into any issues, but it's worth checking either way."),Object(l.a)("p",null,"Again, this only applies if you do not have any screens defined in your config file or if you are using the default Tailwind build through a CDN."),Object(l.a)("p",null,"If you started with a complete config file, your old screens values will continue to work the same way in v1.0 and you don't need to make any changes."),Object(l.a)(r.a,{id:"4-double-check-any-usage-of-the-default-shadow-size-utilities",level:3,mdxType:"Heading"},"4. Double check any usage of the default ",Object(l.a)("code",null,"shadow-{size}")," utilities"),Object(l.a)("p",{className:"italic font-normal text-gray-600 mt-4"},"Impact: Low, Effort: Low"),Object(l.a)("p",null,Object(l.a)("strong",{parentName:"p"},"This change only affects you if you don't have a box-shadow scale defined in your config file or you are using Tailwind through a CDN.")),Object(l.a)("p",null,"Tailwind v1.0 introduces two new box-shadow sizes (",Object(l.a)("inlineCode",{parentName:"p"},"xl"),", and ",Object(l.a)("inlineCode",{parentName:"p"},"2xl"),") and the rest of the shadows have been adjusted as well (",Object(l.a)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/tailwindlabs/tailwindcss/pull/691"}),"#","691"),")."),Object(l.a)("p",null,"If your config file doesn't have a box-shadow scale defined or you are using the default Tailwind build through a CDN, you should double check that you are still happy with how your shadows look. You may want to replace some instances of ",Object(l.a)("inlineCode",{parentName:"p"},"lg")," with ",Object(l.a)("inlineCode",{parentName:"p"},"xl")," or ",Object(l.a)("inlineCode",{parentName:"p"},"2xl"),", as the new ",Object(l.a)("inlineCode",{parentName:"p"},"lg")," shadow is a bit tighter than the old one."),Object(l.a)("p",null,"Again, this only applies if you do not have a box-shadow defined in your config file or if you are using the default Tailwind build through a CDN."),Object(l.a)("p",null,"If you started with a complete config file, your old box-shadow values will continue to work the same way in v1.0 and you don't need to make any changes."),Object(l.a)(r.a,{id:"5-update-any-usage-of-the-default-max-w-size-utilities",level:3,mdxType:"Heading"},"5. Update any usage of the default ",Object(l.a)("code",null,"max-w-{size}")," utilities"),Object(l.a)("p",{className:"italic font-normal text-gray-600 mt-4"},"Impact: Low, Effort: Low"),Object(l.a)("p",null,Object(l.a)("strong",{parentName:"p"},"This change only affects you if you don't have a max-width scale defined in your config file or you are using Tailwind through a CDN.")),Object(l.a)("p",null,"Tailwind v1.0 introduces an all-new max-width scale that is much more usable than the previous default max-width scale (",Object(l.a)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/tailwindlabs/tailwindcss/pull/701"}),"#","701"),")."),Object(l.a)("p",null,"If your config file doesn't have a max-width scale defined or you are using the default Tailwind build through a CDN, you should audit your project for any usage of the existing ",Object(l.a)("inlineCode",{parentName:"p"},"max-w-{size}")," utilities and change the sizes as needed. In general, the new values are smaller than the old ones, so ",Object(l.a)("inlineCode",{parentName:"p"},"max-w-md")," for example may need to be ",Object(l.a)("inlineCode",{parentName:"p"},"max-w-xl")," or ",Object(l.a)("inlineCode",{parentName:"p"},"max-w-2xl")," in the new scale"),Object(l.a)("p",null,"Again, this only applies if you do not have a max-width defined in your config file or if you are using the default Tailwind build through a CDN."),Object(l.a)("p",null,"If you started with a complete config file, your old max-width values will continue to work the same way in v1.0 and you don't need to make any changes."),Object(l.a)("hr",null),Object(l.a)(r.a,{level:2,id:"additional-steps-for-plugin-authors",toc:!0},"Additional steps for plugin authors"),Object(l.a)("p",null,"This step only affects users who have authored their own plugins."),Object(l.a)(r.a,{id:"escape-the-class-portion-of-any-custom-variants-you-have-created",level:3,className:"mt-6",mdxType:"Heading"},"Escape the class portion of any custom variants you have created"),Object(l.a)("p",{className:"italic font-normal text-gray-600 mt-4"},"Impact: Low, Effort: Low"),Object(l.a)("p",null,"In v1.0, you are required to manually escape the class name portion of any selectors you create when adding a new variant using a plugin."),Object(l.a)("p",null,"For example:"),Object(l.a)("pre",{className:"language-diff"},Object(l.a)("code",Object(n.a)({parentName:"pre"},{className:"language-diff"}),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token deleted-sign deleted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-")," function({ addVariant }) {\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token inserted-sign inserted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+")," function({ addVariant, e }) {\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   addVariant('first-child', ({ modifySelectors, separator }) => {\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     modifySelectors(({ className }) => {\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token deleted-sign deleted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix deleted"}),"-"),"       return `.first-child${separator}${className}:first-child`\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token inserted-sign inserted"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix inserted"}),"+"),"       return `.${e(`first-child${separator}${className}`)}:first-child`\n"),Object(l.a)("span",Object(n.a)({parentName:"code"},{className:"token unchanged"}),Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"     })\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," "),"   })\n",Object(l.a)("span",Object(n.a)({parentName:"span"},{className:"token prefix unchanged"})," ")," },"))),Object(l.a)("p",null,"This is just like what you need to do when adding utilities or components that may include user-provided strings."),Object(l.a)("p",null,"Unfortunately there is no super simple way to support both v0.x and v1.0 at the same time without checking which version of Tailwind the user has installed and conditionally applying the escape function."))}N.isMDXComponent=!0,N.layoutProps=j}}]);